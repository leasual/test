//
// Created by slam on 18-10-17.
//

#ifndef HEAD_INFO_SHAPE_PREDICT_H
#define HEAD_INFO_SHAPE_PREDICT_H

#include <iostream>
#include <memory>
#include <opencv2/opencv.hpp>
#include "net.h"

class ShapePredictor{
public:
    explicit ShapePredictor(const std::string& model_path);
    std::vector<cv::Point2f> predict(const cv::Mat &img, const cv::Rect2i &face);
private:
    std::shared_ptr<ncnn::Net> net_;
    float meanshape[164] = {
    4.810653050004561754e-02, 3.039657521750639413e-01,
    4.917402010828844650e-02, 4.304005163650015953e-01,
    6.281716231279420304e-02, 5.642893652321954168e-01,
    9.672920510266812266e-02, 6.724498620228475110e-01,
    1.476922718221924669e-01, 7.692901235766393953e-01,
    2.162453190416741278e-01, 8.539585252814985150e-01,
    2.994729514243416602e-01, 9.249623569745695217e-01,
    3.956196143774168839e-01, 9.782587774886486454e-01,
    5.046741332385328294e-01, 9.994442116816444344e-01,
    6.138097816275330798e-01, 9.783739723859812276e-01,
    7.100413192822299102e-01, 9.251670970632990265e-01,
    7.932960310863114151e-01, 8.542410219089148216e-01,
    8.618175693712305518e-01, 7.696758194328465752e-01,
    9.127000628103177915e-01, 6.729335735164004850e-01,
    9.464400669049860548e-01, 5.648778991424651119e-01,
    9.597923001358125150e-01, 4.310231170920783006e-01,
    9.606609952808146113e-01, 3.046307076330919128e-01,
    1.859199548268706814e-01, 1.597637301580943359e-01,
    2.361997476157645104e-01, 1.083813455921426583e-01,
    2.976401453507401818e-01, 9.893290297423708302e-02,
    3.605332054669221908e-01, 1.043091684441294076e-01,
    4.211679868811703531e-01, 1.190121428531822761e-01,
    4.183572820455160879e-01, 1.598124869137561022e-01,
    3.595794593316483656e-01, 1.498293471933986876e-01,
    3.003224973565220002e-01, 1.447147648553080146e-01,
    2.422802236019720723e-01, 1.485846601210204232e-01,
    5.862146863203862024e-01, 1.191722359678903803e-01,
    6.468918565947286980e-01, 1.045687480356208010e-01,
    7.098440388676343638e-01, 9.928751019235045050e-02,
    7.713717583482723184e-01, 1.088099475256333742e-01,
    8.218825135503475821e-01, 1.602315901847226887e-01,
    7.654008106968791525e-01, 1.489937794807382754e-01,
    7.072722571605948305e-01, 1.450381611555197070e-01,
    6.479521085043473683e-01, 1.500694098966050827e-01,
    5.891169755801848318e-01, 1.599681966242370301e-01,
    5.038164100020604552e-01, 2.603859131687681905e-01,
    5.038421479077935805e-01, 3.263684365480590266e-01,
    5.038672626342094452e-01, 3.923676259797112542e-01,
    5.039057463473387566e-01, 4.568803717549654864e-01,
    4.157341457570066234e-01, 5.356317805693033840e-01,
    4.591563109553054023e-01, 5.343523648831368655e-01,
    5.040666115070631115e-01, 5.352085653171191337e-01,
    5.490047341790235125e-01, 5.344163357621759536e-01,
    5.924890549214738567e-01, 5.357465958782406945e-01,
    2.467004714059673476e-01, 2.732795582690246139e-01,
    2.790492404341216592e-01, 2.651174658267342887e-01,
    3.154663099618732480e-01, 2.609805057437138420e-01,
    3.534194447301297615e-01, 2.617253856699750525e-01,
    3.868754178422979528e-01, 2.696676762353640289e-01,
    3.523651635635418611e-01, 2.786761063078254108e-01,
    3.158384817011100631e-01, 2.824239551546023907e-01,
    2.802619379947597356e-01, 2.805453700956453411e-01,
    6.209268210010465694e-01, 2.698473889498634870e-01,
    6.544066159770038915e-01, 2.619503656160511729e-01,
    6.923881299685934465e-01, 2.612656399371268146e-01,
    7.288397488857891737e-01, 2.654631971038914351e-01,
    7.612314876072904246e-01, 2.736815883537307426e-01,
    7.276177788715655348e-01, 2.808922026166655317e-01,
    6.920029928215654103e-01, 2.827064162704109873e-01,
    6.554628719994801678e-01, 2.789044165860090074e-01,
    3.681255753986769630e-01, 7.073437983630249670e-01,
    4.104530273559489073e-01, 6.609415932561579776e-01,
    4.693872926259339273e-01, 6.315022422616671793e-01,
    5.041766054259124719e-01, 6.388049765428296389e-01,
    5.389570496260487342e-01, 6.315593138494376424e-01,
    5.980733753127166485e-01, 6.610814217198406340e-01,
    6.406846993212431673e-01, 7.075457735924953750e-01,
    6.077962960837041129e-01, 7.463497015349244146e-01,
    5.618341450172621432e-01, 7.730553141132674444e-01,
    5.044385384520392313e-01, 7.828602598293205039e-01,
    4.470597901437136645e-01, 7.729978723511418126e-01,
    4.010683944226250408e-01, 7.462196811731148793e-01,
    3.811387179411961368e-01, 7.070186299550159648e-01,
    4.591302932568799844e-01, 6.779908632180138284e-01,
    5.042366507836746337e-01, 6.751736338718372643e-01,
    5.494109220756917544e-01, 6.780666417042456873e-01,
    6.276671203227065510e-01, 7.072031656426208679e-01,
    5.491763995812591892e-01, 7.296004752594182907e-01,
    5.043594208806726487e-01, 7.336755054406999266e-01,
    4.595822003845625447e-01, 7.295311638103938456e-01,
    3.180646786058018982e-01, 2.719717726747465925e-01,
    6.897735157749702584e-01, 2.722529921971180711e-01};
};

#endif //HEAD_INFO_SHAPE_PREDICT_H
